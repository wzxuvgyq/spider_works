cryptoJs = require("crypto-js")
var t = {
    "data": "",
    "status": 200,
    "statusText": "OK",
    "headers": {
        "content-type": "application/json"
    },
    "config": {
        "transformRequest": {},
        "transformResponse": {},
        "timeout": 60000,
        "xsrfCookieName": "XSRF-TOKEN",
        "xsrfHeaderName": "X-XSRF-TOKEN",
        "maxContentLength": -1,
        "headers": {
            "Accept": "application/json, text/plain, */*",
            "Content-Type": "application/json;charset=utf-8",
            "deviceType": 1
        },
        "method": "post",
        "baseURL": "https://app.swguancha.com/",
        "url": "https://app.swguancha.com/client/v1/cPublic/consumer/baseInfo",
        "data": "{\"size\":6,\"current\":4,\"propertyCode\":[\"DISTRICT_PROP_GJ025_RJDQSCZZ\",\"DISTRICT_PROP_GJ117_NMSYGGQDCYYCLS\",\"DISTRICT_PROP_GJ001_NMHJRK\"],\"dimensionTime\":\"2019\",\"levelType\":2}"
    },
    "request": {
        "__sufei_url": "https://app.swguancha.com/client/v1/cPublic/consumer/baseInfo"
    }
}
var l ='QV1f3nHn2qm7i3xrj3Y9K9imDdGTjTu9'
var n, r;
n = cryptoJs.enc.Utf8.parse(l);
r = cryptoJs.AES.decrypt(t.data, n, {
    mode: cryptoJs.mode.ECB,
    padding: cryptoJs.pad.Pkcs7})

    i = r.toString(cryptoJs.enc.Utf8);
    s = JSON.parse(i);

console.log(s.data)